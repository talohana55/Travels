{"ast":null,"code":"import { Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { UserTypeEnum } from \"./models/user\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router) {\n      this.router = router;\n    }\n\n    canActivate(next, state) {\n      if (sessionStorage.getItem('access_token')) {\n        return true;\n      }\n\n      console.log(`User is not authenticated`);\n      this.router.navigate(['login']);\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();\nexport let IsAdminGuard = /*#__PURE__*/(() => {\n  class IsAdminGuard {\n    constructor(router) {\n      this.router = router;\n    }\n\n    canActivate(next, state) {\n      const loggedInUserStr = sessionStorage.getItem(\"logged_in_user\");\n\n      if (loggedInUserStr) {\n        const user = JSON.parse(loggedInUserStr);\n        return user.userType === UserTypeEnum.Admin;\n      }\n\n      console.log(`User is not admin`);\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n\n  }\n\n  IsAdminGuard.ɵfac = function IsAdminGuard_Factory(t) {\n    return new (t || IsAdminGuard)(i0.ɵɵinject(i1.Router));\n  };\n\n  IsAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IsAdminGuard,\n    factory: IsAdminGuard.ɵfac,\n    providedIn: \"root\"\n  });\n  return IsAdminGuard;\n})();\nexport let IsMemberGuard = /*#__PURE__*/(() => {\n  class IsMemberGuard {\n    constructor(router) {\n      this.router = router;\n    }\n\n    canActivate(next, state) {\n      const loggedInUserStr = sessionStorage.getItem(\"logged_in_user\");\n\n      if (loggedInUserStr) {\n        const user = JSON.parse(loggedInUserStr);\n        return user.userType === UserTypeEnum.Member;\n      }\n\n      console.log(`User is not a member`);\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n\n  }\n\n  IsMemberGuard.ɵfac = function IsMemberGuard_Factory(t) {\n    return new (t || IsMemberGuard)(i0.ɵɵinject(i1.Router));\n  };\n\n  IsMemberGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IsMemberGuard,\n    factory: IsMemberGuard.ɵfac,\n    providedIn: \"root\"\n  });\n  return IsMemberGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}