{"ast":null,"code":"import { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { map } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HttpService = /*#__PURE__*/(() => {\n  class HttpService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.apiBaseUrl = environment.backendBaseUrl;\n    }\n\n    getAirlines() {\n      return this.httpClient.get(`${this.apiBaseUrl}/airlines/get`);\n    }\n\n    getFlights() {\n      return this.httpClient.get(`${this.apiBaseUrl}/flights/get`);\n    }\n\n    getFlightById(cid) {\n      return this.httpClient.get(`${this.apiBaseUrl}/flights/get/${cid}`);\n    }\n\n    getState() {\n      return this.httpClient.get(`${this.apiBaseUrl}/states/get`);\n    }\n\n    getTravelRoutes() {\n      return this.httpClient.get(`${this.apiBaseUrl}/travelRoutes/get`);\n    }\n\n    searchFlights(departure, destination, departure_datetime, arrival_datetime) {\n      const headers = new HttpHeaders().set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      const params = new HttpParams().set(\"departure\", departure).set(\"destination\", destination).set(\"departure_datetime\", departure_datetime).set(\"arrival_datetime\", arrival_datetime);\n      return this.httpClient.get(`${this.apiBaseUrl}/flights/search`, {\n        headers: headers,\n        params: params\n      });\n    }\n\n    searchTravelRoutes(from, to) {\n      const headers = new HttpHeaders().set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      const params = new HttpParams().set(\"from\", from).set(\"to\", to);\n      return this.httpClient.get(`${this.apiBaseUrl}/travelRoutes/search`, {\n        headers: headers,\n        params: params\n      });\n    }\n\n    createFlight(flight) {\n      return this.httpClient.post(`${this.apiBaseUrl}/flights/create`, flight);\n    }\n\n    updateFlight(flight) {\n      return this.httpClient.put(`${this.apiBaseUrl}/flights/update`, flight);\n    }\n\n    deleteFlight(cid) {\n      const options = {\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\"\n        }),\n        body: {\n          cid\n        }\n      };\n      return this.httpClient.delete(`${this.apiBaseUrl}/flights/delete`, options).pipe(map(res => void 0));\n    }\n\n    createOrder(order) {\n      return this.httpClient.post(`${this.apiBaseUrl}/orders/create`, order);\n    }\n\n  }\n\n  HttpService.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac,\n    providedIn: \"root\"\n  });\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}